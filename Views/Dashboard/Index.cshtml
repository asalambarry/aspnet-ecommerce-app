@using ShopZone.ViewModels
@model DashboardViewModel
@{
    ViewData["Title"] = "Admin Dashboard";
}

<div class="container-fluid mt-4">
    <h1 class="mb-4">Dashboard</h1>

    <!-- Statistiques générales -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <h5 class="card-title">Total Orders</h5>
                    <h2>@Model.TotalOrders</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <h5 class="card-title">Revenue</h5>
                    <h2>@Model.TotalRevenue.ToString("C")</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <h5 class="card-title">Products</h5>
                    <h2>@Model.TotalProducts</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-white">
                <div class="card-body">
                    <h5 class="card-title">Customers</h5>
                    <h2>@Model.TotalCustomers</h2>
                </div>
            </div>
        </div>
    </div>

    <!-- Graphiques -->
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Sales Overview</h5>
                    <canvas id="salesChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Top Products</h5>
                    <canvas id="productsChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Top Products Table -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Best Selling Products</h5>
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Category</th>
                                    <th>Quantity Sold</th>
                                    <th>Revenue</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var product in Model.TopProducts)
                                {
                                    <tr>
                                        <td>@product.Name</td>
                                        <td>@product.Category</td>
                                        <td>@product.QuantitySold</td>
                                        <td>@product.Revenue.ToString("C")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Sales Chart
        new Chart(document.getElementById('salesChart'), {
            type: 'line',
            data: {
                labels: @Json.Serialize(Model.OrdersByMonth.Keys),
                datasets: [{
                    label: 'Orders',
                    data: @Json.Serialize(Model.OrdersByMonth.Values),
                    borderColor: 'rgb(75, 192, 192)',
                    tension: 0.1
                },
                {
                    label: 'Revenue',
                    data: @Json.Serialize(Model.RevenueByMonth.Values),
                    borderColor: 'rgb(255, 99, 132)',
                    tension: 0.1,
                    yAxisID: 'revenue'
                }]
            },
            options: {
                responsive: true,
                scales: {
                    revenue: {
                        position: 'right',
                        beginAtZero: true
                    }
                }
            }
        });

        // Top Products Chart
        new Chart(document.getElementById('productsChart'), {
            type: 'doughnut',
            data: {
                labels: @Json.Serialize(Model.TopProducts.Select(p => p.Name)),
                datasets: [{
                    data: @Json.Serialize(Model.TopProducts.Select(p => p.Revenue)),
                    backgroundColor: [
                        'rgb(255, 99, 132)',
                        'rgb(54, 162, 235)',
                        'rgb(255, 206, 86)',
                        'rgb(75, 192, 192)',
                        'rgb(153, 102, 255)'
                    ]
                }]
            }
        });
    </script>
}